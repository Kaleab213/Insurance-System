// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int               @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String            @unique
  hash       String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  costumers  Costumers?
  insurance  User_Insurance[]
}

model Costumers {
  id         Int               @id @default(autoincrement())
  phone      String
  account_no String

  user    User  @relation(fields: [userId], references: [id])
  userId        Int  @unique

  insurance User_Insurance[]     
}

model Insurance {
  id          Int               @id @default(autoincrement())
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  type        String
  level       String
  status      Boolean           @default(false)
  description String
}

model User_Insurance {
  id                  Int               @id @default(autoincrement())
  user                User              @relation(fields: [userId], references: [id])
  userId              Int
  costumer Costumers  @relation(fields: [costumerId], references: [id])
  costumerId Int
  status              Boolean           @default(false)
  ammount_money       Float
  telebirr            String
  coverage_percentage Float
  deposit             Float
  payments            Payment[]
  requests            Coverage_request[]
  notification Notification[]
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  type                String
}

model Payment {
  id          Int               @id @default(autoincrement())
  insurance   User_Insurance    @relation(fields: [insuranceId], references: [id])
  insuranceId Int
  status      Boolean           @default(false)
  bill        Float
}

model Coverage_request {
  id              Int               @id @default(autoincrement())
  insurance       User_Insurance    @relation(fields: [insuranceId], references: [id])
  insuranceId     Int
  description     String
  verified_paper  String
  status          Boolean           @default(false)
  insured_payment Float
}

model Notification {
  id         Int               @id @default(autoincrement())
  insurance  User_Insurance    @relation(fields: [insuranceId], references: [id])
  insuranceId Int
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  status     Boolean           @default(false)
  description String
}
